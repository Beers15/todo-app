{"version":3,"sources":["context/auth.js","components/auth.js","components/header.js","hooks/form.js","context/settings.js","components/todoItem.js","components/list.js","components/itemForm.js","components/home.js","components/login.js","components/settingsForm.js","app.js","index.js"],"names":["userPool","admin","password","username","role","capabilities","editor","writer","AuthContext","React","createContext","Auth","children","useState","loggedIn","setLoggedIn","user","setUser","useEffect","qs","URLSearchParams","window","location","search","cookieToken","cookie","load","token","get","validateToken","values","can","capability","includes","login","jwt","sign","process","REACT_APP_SECRET","console","log","logout","setLoginState","register","verify","e","save","Provider","value","props","isLoggedIn","useContext","canDo","settings","okToRender","condition","Header","className","to","incomplete","useForm","callback","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","SettingsContext","Settings","showCompleted","setCompleted","numItemsPerPage","setNumItemsPerPage","sortBy","setSortBy","initialRender","isInitialRender","localStorage","setItem","JSON","stringify","getItem","parse","TodoItem","interactive","elevation","Elevation","TWO","item","text","assignee","difficulty","complete","toString","onClick","toggleComplete","id","icon","intent","deleteItem","List","startIndex","setStartIndex","displayList","list","sort","a","b","aDifficulty","aAssignee","bAssignee","localeCompare","slice","map","key","filter","length","ItemForm","onSubmit","minimal","onChange","type","placeholder","defaultValue","min","max","Home","uuid","alert","setList","incompleteCount","setIncomplete","document","title","items","Login","auth","setUsername","setPassword","SettingsForm","userInput","selectedSortRadioBtn","setSelectedSortRadioBtn","selectedCompleteRadioBtn","setSelectedCompleteRadioBtn","htmlFor","label","selectedValue","App","exact","path","Main","Component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c0d1cafb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport cookie from 'react-cookies';\nimport jwt from 'jsonwebtoken';\n\n/* This app doesn't have a backend, to include a DB. Registered users \n   will be added to this object, which doesn't persist on app restart\n   TODO: add bcrypt for passwords and persist to localstorage */\nconst userPool = {\n  admin: {password:'password', username: 'admin', role:'admin', capabilities:['create','read','update','delete']},\n  editor: { password: 'password', username: 'editor', role: 'editor', capabilities: ['read', 'create', 'update']},\n  writer: { password: 'password', username: 'writer', role: 'writer', capabilities: ['create', 'read']},\n};\n\nexport const AuthContext = React.createContext();\n\nconst Auth = ({children}) => {\n  const [ loggedIn, setLoggedIn ] = useState(false);\n  const [ user, setUser ] = useState({ capabilities: [] });\n\n  useEffect(() => {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load('auth');\n    const token = qs.get('token') || cookieToken || null;\n    validateToken(token);\n  }, []);\n\n  const can = (capability) => {\n    return values?.user?.capabilities?.includes(capability);\n  }\n\n  const login = (username, password) => {\n    if(userPool[username]) {\n      //Create a \"good\" token, like you'd get from a server\n      const token = jwt.sign(userPool[username], process.env.REACT_APP_SECRET || 'SECRET');\n      validateToken(token);\n    } else {\n      console.log(\"INVALID LOGIN\");\n      //TODO add feedback when this occurs\n    }\n  }\n\n  const logout = () => {\n    setLoginState(false, null, {});\n  };\n\n  const register = (username, password) => {\n    if(userPool[username]) {\n      console.log(\"USER ALREADY EXISTS\");\n      //TODO add feedback when this occurs\n    } else {\n      //for now all users have all capabilities, like an admin would\n      userPool[username] = { username, password, role:'admin', capabilities:['create','read','update','delete'] }\n      const token = jwt.sign(userPool[username], process.env.REACT_APP_SECRET || 'SECRET');\n      validateToken(token);\n    }\n  }\n\n  let values = {\n    loggedIn,\n    user,\n    can,\n    login,\n    logout,\n    register,\n  };\n\n  const validateToken = token => {\n    try {\n      let user = jwt.verify(token, process.env.REACT_APP_SECRET || 'SECRET');\n      setLoginState(true, token, user);\n    }\n    catch(e) {\n      setLoginState(false, null, {});\n      console.log('Token Validation Error', e);\n    }\n  };\n\n  const setLoginState = (loggedIn, token, user) => {\n    cookie.save('auth', token);\n    setLoggedIn(loggedIn);\n    setUser(user);\n    //setToken(token);\n  };\n\n  return (\n    <AuthContext.Provider value={values}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default Auth;\n","import React, { useContext } from 'react';\nimport { When } from 'react-if';\n\nimport { AuthContext } from '../context/auth';\n\nconst Auth = (props) => {\n  const auth = useContext(AuthContext);\n\n  const isLoggedIn = auth.loggedIn;\n  const canDo = props.capability ? settings.can(props.capability) : true;\n  const okToRender = isLoggedIn && canDo;\n\n  return (\n    <When condition={okToRender}>\n      {props.children}\n    </When>\n  );\n}\n\nexport default Auth;","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  return (\n    <nav className=\"bp3-navbar bp3-light\" data-testid=\"header\">\n      <div className=\"nav-style\">\n        <div className=\"bp3-navbar-group bp3-align-left\">\n          <div className=\"nav-heading bp3-icon-list-detail-view\"><Link to=\"/\"> To Do List</Link></div>\n        </div>\n        <div className=\"bp3-navbar-group bp3-align-right\">\n          <Link to=\"/settings\">Settings</Link>\n          <span className=\"bp3-navbar-divider\"></span>\n          <span className=\"bp3-icon-tick\"> {props.incomplete} items pending</span>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, { useState, useEffect } from 'react';\n\n\nexport const SettingsContext = React.createContext();\n\nconst Settings = (props) => {\n  const [ showCompleted, setCompleted ] = useState(false);\n  const [ numItemsPerPage, setNumItemsPerPage ] = useState(3);\n  const [ sortBy, setSortBy ] = useState('assignee');\n  //to not overwrite local storage on first render\n  const [ initialRender, isInitialRender ] = useState(true);\n\n  useEffect(() => {\n    if(!initialRender) {\n      //update local storage with user settings every time they change a setting\n      let settings = [showCompleted, numItemsPerPage, sortBy];\n      localStorage.setItem('settings', JSON.stringify(settings));\n    } else {\n      isInitialRender(false);\n    }\n  }, [showCompleted, numItemsPerPage, sortBy]);\n\n  useEffect(() => {\n    if(localStorage.getItem('settings')) {\n      let settings = JSON.parse(localStorage.getItem('settings'));\n      console.log(\"SETTINGS FROM LAST TIME: \", settings[0], settings[1], settings[2]);\n      setCompleted(settings[0] || false);\n      setNumItemsPerPage(settings[1] || 3);\n      setSortBy(settings[2] || 'difficultyHighToLow');\n    }\n  }, []);\n\n  const values = {\n    showCompleted,\n    setCompleted,\n    numItemsPerPage,\n    setNumItemsPerPage,\n    sortBy,\n    setSortBy,\n  }\n  \n  return (\n    <SettingsContext.Provider value={values}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default Settings;","import React from 'react';\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\n\nconst TodoItem = (props) => {\n  return (\n    <Card className=\"todo-item-card\" interactive={true} elevation={Elevation.TWO} data-testid=\"todoItem\">\n      <h4>Task: {props.item.text}</h4>\n      <p><small>Assigned to: {props.item.assignee}</small></p>\n      <p><small>Difficulty: {props.item.difficulty}</small></p>\n      <p><small>Complete: {props.item.complete.toString()}</small></p>\n      {!props.item.complete && (<Button onClick={() => props.toggleComplete(props.item.id)} icon=\"tick\" intent=\"success\">Mark Complete</Button>)}\n      {' '}<Button onClick={() => props.deleteItem(props.item.id)} icon=\"cross\" intent=\"danger\">Delete</Button>\n    </Card>\n  )\n}\n\nexport default TodoItem;\n","import React from 'react'\nimport { useContext, useState } from 'react';\nimport { SettingsContext } from '../context/settings';\nimport { Button } from \"@blueprintjs/core\";\nimport TodoItem from './todoItem';\n\nconst List = (props) => {\n  const settings = useContext(SettingsContext);\n  let [startIndex, setStartIndex] = useState(0);\n\n  const handleNextClick = () => {\n    setStartIndex(startIndex + (settings.numItemsPerPage));\n  }\n\n  const handlePrevClick = () => {\n    setStartIndex(startIndex - (settings.numItemsPerPage));\n  }\n\n  const displayList = (list) => {\n    //may add more later\n    if(settings.sortBy) {\n      switch(settings.sortBy) {\n        case 'difficultyLowToHigh':\n          list.sort((a, b) => {\n            let aDifficulty = a.difficulty || 0;\n            let bDifficulty = b.difficulty || 0;\n            return aDifficulty - bDifficulty;\n          });\n          break;\n      case 'difficultyHighToLow':\n        list.sort((a, b) => {\n          let aDifficulty = a.difficulty || 0;\n          let bDifficulty = b.difficulty || 0;\n          return bDifficulty - aDifficulty;\n        });\n        break;\n      case 'assignee':\n        list.sort((a, b) => {\n          let aAssignee = a.assignee || 'z';\n          let bAssignee = b.assignee || 'z';\n          return aAssignee.localeCompare(bAssignee);\n        });\n        break;\n      default:\n        break;\n      }\n    }\n\n    let display = list.slice(startIndex, startIndex + settings.numItemsPerPage).map((item, key) => (\n      <TodoItem key={key} deleteItem={props.deleteItem} toggleComplete={props.toggleComplete} item={item} />\n    ));\n\n    return display;\n  }\n\n  return (\n    <div className=\"list-margin\">\n      <div className=\"list-flex-container\">\n        {settings.showCompleted ? displayList(props.list) : displayList(props.list.filter((item) => {\n          if(item.complete == false) { \n            return true;\n          }\n        }))}\n      </div>\n      {startIndex > settings.numItemsPerPage - 1 && (\n          <Button onClick={handlePrevClick} icon=\"arrow-left\" intent=\"primary\">Previous Page</Button>\n        )}\n        {(props.list.length > settings.numItemsPerPage && startIndex < props.list.length - 1) && \n          (<Button onClick={handleNextClick} icon=\"arrow-right\" intent=\"primary\">Next Page</Button>\n        )}\n    </div>\n  )\n}\nexport default List;\n","import React from 'react'\nimport { Button, FormGroup, InputGroup, Card, Elevation } from \"@blueprintjs/core\";\n\nconst ItemForm = (props) => {\n  return (  \n      <form onSubmit={props.handleSubmit} data-testid=\"todo-form\">\n        <div className=\"bp3-callout bp3-intent-success form-caption\">\n          <h4 className=\"bp3-heading\">Add To Do Item</h4>\n          Get organized, get things done.\n        </div>\n\n        <Card interactive={false} elevation={Elevation.TWO}>\n          <FormGroup minimal={true}>\n            <span>To Do Item</span>\n            <InputGroup className=\"input-item\" onChange={props.handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" data-testid=\"item-details\" />\n\n            <span>Assigned To</span>\n            <InputGroup className=\"input-item\" onChange={props.handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" data-testid=\"item-assignee\" />\n            \n            <span className=\"slider-label\">Difficulty</span>\n            <br/>\n            <input className=\"slider\" onChange={props.handleChange} name=\"difficulty\" type=\"range\" defaultValue=\"3\" min={1} max={5} data-testid=\"item-difficulty\" />\n          \n            <br/><Button className=\"submit-btn\" type=\"submit\" intent=\"success\" data-testid=\"todo-submit-btn\">Add Item</Button>\n          </FormGroup>\n         </Card>\n      </form>\n   \n  )\n}\n\nexport default ItemForm;\n","import React, { useEffect } from 'react';\nimport useForm from '../hooks/form.js';\nimport List from './list.js';\nimport ItemForm from './itemForm.js';\n\nimport { v4 as uuid } from 'uuid';\n\nconst Home = (props) => {\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  useEffect(() => {\n    let incompleteCount = props.list.filter(item => !item.complete).length;\n    props.setIncomplete(incompleteCount);\n    document.title = `To Do List: ${props.incomplete}`;\n  }, [props.list]);\n\n  useEffect(() => {\n    document.title = `To Do List: ${props.incomplete}`;\n  }, []);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n\n    if(!props.list.includes(item)) {\n      props.setList([...props.list, item]);\n    } else {\n      alert('Entry already exists')\n    }\n  }\n\n  function deleteItem(id) {\n    const items = props.list.filter( item => item.id !== id );\n    props.setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = props.list.map( item => {\n      if ( item.id == id ) {\n        item.complete = ! item.complete;\n      }\n      return item;\n    });\n\n    props.setList(items);\n  }\n\n  return (\n    <>\n      <div className=\"flex-container\">\n        <ItemForm \n          handleSubmit={handleSubmit} \n          handleChange={handleChange} \n        />\n      \n        {props.list.length > 0 && (<List list={props.list} deleteItem={deleteItem} toggleComplete={toggleComplete} /> )}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from 'react';\nimport { When } from 'react-if';\n\nimport { AuthContext } from '../context/auth';\n\nconst Login = () =>  {\n  const auth = useContext(AuthContext);\n\n  let [ username, setUsername ] = useState('');\n  let [ password, setPassword ] = useState('');\n\n  const handleChange = e => {\n    if(e.target.name === 'username') {\n      setUsername(e.target.value);\n    }\n    if(e.target.name === 'password') {\n      setPassword(e.target.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    auth.login(username, password);\n  };\n\n  return (\n    <>\n      <When condition={auth.loggedIn}>\n        <button data-testid=\"logout\" onClick={auth.logout}>Log Out</button>\n      </When>\n\n      <When condition={!auth.loggedIn}>\n        <form onSubmit={handleSubmit}>\n          <input\n            data-testid=\"username-field\"\n            placeholder=\"UserName\"\n            name=\"username\"\n            onChange={handleChange}\n          />\n          <input \n            data-testid=\"password-field\"\n            placeholder=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n          />\n          <button data-testid=\"login\">Login</button>\n        </form>\n      </When>\n    </>\n  );\n}\n\nexport default Login;","import React from 'react'\nimport useForm from '../hooks/form.js';\nimport { useContext, useState } from 'react';\nimport { SettingsContext } from '../context/settings';\nimport { Button, FormGroup, InputGroup, Card, Elevation, RadioGroup, Radio } from \"@blueprintjs/core\";\n\nconst SettingsForm = () => {\n  const settings = useContext(SettingsContext);\n\n  const { handleChange, handleSubmit } = useForm(updateSettings);\n\n  const [selectedSortRadioBtn, setSelectedSortRadioBtn] = useState()\n  const [selectedCompleteRadioBtn, setSelectedCompleteRadioBtn] = useState()\n\n  function updateSettings(userInput) {\n    //update submitted values, or use old value if non provided\n    settings.setCompleted(userInput['Blueprint3.RadioGroup-0'] || settings.setCompleted);\n    settings.setSortBy(userInput['Blueprint3.RadioGroup-1'] || settings.sortBy);\n    settings.setNumItemsPerPage(userInput['itemsPerPage'] || settings.setNumItemsPerPage);\n\n    alert('Your settings have been applied!')\n  }\n\n  return (\n    <div className=\"flex-container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"bp3-callout bp3-intent-success form-caption\">\n          <h4 className=\"bp3-heading\">Modify App Settings</h4>\n          Todo the Way You Want to\n        </div>\n\n        <Card interactive={false} elevation={Elevation.TWO}>\n          <FormGroup minimal={true}>\n            <label htmlFor=\"itemsPerPages\">Number of Todo Items Per Page</label>\n            <InputGroup type=\"number\" id=\"itemsPerPage\" name=\"itemsPerPage\" min=\"1\" max=\"20\" onChange={handleChange} />\n            <br />\n\n            <RadioGroup\n                label=\"Show Completed Items\"\n                onChange={handleChange}\n                selectedValue={selectedCompleteRadioBtn}\n              >\n              <Radio label=\"Yes! I want to keep track of what I've done.\" onClick={(e) => setSelectedCompleteRadioBtn(e.target.value)} value=\"true\" />\n              <Radio label=\"No! It's in the past.\" onClick={(e) => setSelectedCompleteRadioBtn(e.target.value)} value=\"false\"  />\n            </RadioGroup>\n            <br/>\n\n            <RadioGroup\n              label=\"Sort By\"\n              onChange={handleChange}\n              selectedValue={selectedSortRadioBtn}\n            >\n              <Radio label=\"Difficulty: High to Low\" onClick={(e) => setSelectedSortRadioBtn(e.target.value)} value=\"difficultyHighToLow\" />\n              <Radio label=\"Difficulty: Low to High\" onClick={(e) => setSelectedSortRadioBtn(e.target.value)} value=\"difficultyLowToHigh\"  />\n              <Radio label=\"Assignee\" onClick={(e) => setSelectedSortRadioBtn(e.target.value)} value=\"assignee\" />\n            </RadioGroup>\n          \n            <br/><Button className=\"submit-btn\" type=\"submit\" intent=\"success\">Confirm Changes</Button>\n          </FormGroup>\n        </Card>\n      </form>\n    </div>\n  );\n}\n\nexport default SettingsForm;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { useState } from 'react';\n\nimport Auth from './components/auth';\nimport Header from './components/header';\nimport Home from './components/home';\nimport Login from './components/login';\nimport SettingsForm from './components/settingsForm';\n\nimport './app.scss';\n\nconst App = () => {\n  const [incomplete, setIncomplete] = useState([]);\n  const [list, setList] = useState([]);\n\n  return (\n    <Router>\n      <Header incomplete={incomplete} />\n      <Login data-testid=\"login\" />\n      <Switch>\n        <Route exact path=\"/\">\n          <Auth>\n            <Home \n              setIncomplete={setIncomplete} \n              incomplete={incomplete}\n              setList={setList}\n              list={list}  \n            />\n          </Auth>\n        </Route>\n        <Route path=\"/settings\">\n          <Auth>\n            <SettingsForm />\n          </Auth>\n        </Route>\n        <Route path=\"*\">\n          <Auth>\n            <Home \n              setIncomplete={setIncomplete} \n              incomplete={incomplete}\n              setList={setList}\n              list={list}  \n            />\n          </Auth>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nimport SettingsProvider from './context/settings';\nimport AuthProvider from './context/auth';\n\nimport \"normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\n\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <SettingsProvider>\n        <AuthProvider>\n          <App />\n        </AuthProvider>\n      </SettingsProvider>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}