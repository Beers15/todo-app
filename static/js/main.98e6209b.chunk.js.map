{"version":3,"sources":["hooks/form.js","context/theme.js","components/todoItem.js","components/list.js","components/form.js","components/header.js","components/todo.js","app.js","index.js"],"names":["useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","ThemeContext","React","createContext","Theme","props","state","showCompleted","numItemsPerPage","sortBy","Provider","this","children","Component","TodoItem","interactive","elevation","Elevation","TWO","item","text","assignee","difficulty","complete","toString","onClick","toggleComplete","id","icon","intent","deleteItem","List","settings","useContext","startIndex","setStartIndex","displayList","list","console","log","sort","a","b","aDifficulty","slice","map","key","className","filter","length","Form","onSubmit","class","minimal","onChange","type","placeholder","defaultValue","min","max","Header","incomplete","ToDo","setList","setIncomplete","uuid","includes","alert","useEffect","incompleteCount","document","title","items","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.98e6209b.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React from 'react';\n\nexport const ThemeContext = React.createContext();\n\nclass Theme extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCompleted: false,\n      numItemsPerPage: 8,\n      sortBy: 'difficultyHighToLow',\n    }\n  }\n\n  render() {\n    return (\n      <ThemeContext.Provider value={this.state}>\n        {this.props.children}\n      </ThemeContext.Provider>\n    )\n  }\n}\n\nexport default Theme;","import React from 'react';\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\n\nconst TodoItem = (props) => {\n  return (\n    <Card interactive={true} elevation={Elevation.TWO}>\n      <h5>{props.item.text}</h5>\n      <p><small>Assigned to: {props.item.assignee}</small></p>\n      <p><small>Difficulty: {props.item.difficulty}</small></p>\n      <p><small>Complete: {props.item.complete.toString()}</small></p>\n      {!props.item.complete && (<Button onClick={() => props.toggleComplete(props.item.id)} icon=\"tick\" intent=\"success\">Mark Complete</Button>)}\n      {' '}<Button onClick={() => props.deleteItem(props.item.id)} icon=\"cross\" intent=\"danger\">Delete</Button>\n    </Card>\n  )\n}\n\nexport default TodoItem;\n","import React from 'react'\nimport { useContext, useState } from 'react';\nimport { ThemeContext } from '../context/theme';\nimport { Button } from \"@blueprintjs/core\";\nimport TodoItem from './todoItem';\n\nconst List = (props) => {\n  const settings = useContext(ThemeContext);\n  let [startIndex, setStartIndex] = useState(0);\n\n  const handleNextClick = () => {\n    setStartIndex(startIndex + (settings.numItemsPerPage));\n  }\n\n  const handlePrevClick = () => {\n    setStartIndex(startIndex - (settings.numItemsPerPage));\n  }\n\n  const displayList = (list) => {\n    //may add more later\n    if(settings.sortBy) {\n      switch(settings.sortBy) {\n        case 'difficultyLowToHigh':\n          console.log(\"HIT\");\n          list.sort((a, b) => {\n            let aDifficulty = a.difficulty || 0;\n            let bDifficulty = b.difficulty || 0;\n            return aDifficulty - bDifficulty;\n          });\n          break;\n      case 'difficultyHighToLow':\n        console.log(\"HIT\");\n        list.sort((a, b) => {\n          let aDifficulty = a.difficulty || 0;\n          let bDifficulty = b.difficulty || 0;\n          return bDifficulty - aDifficulty;\n        });\n        break;\n        default:\n          break;\n      }\n    }\n\n    let display = list.slice(startIndex, startIndex + settings.numItemsPerPage).map((item, key) => (\n      <TodoItem key={key} deleteItem={props.deleteItem} toggleComplete={props.toggleComplete} item={item} />\n    ));\n\n    return display;\n  }\n\n  return (\n    <div data-testid=\"list\" className=\"list-margin\">\n      <div className=\"list-flex-container\">\n        {settings.showCompleted ? displayList(props.list) : displayList(props.list.filter((item) => {\n          if(item.complete == false) { \n            return true;\n          }\n        }))}\n      </div>\n      {startIndex > settings.numItemsPerPage - 1 && (\n          <Button onClick={handlePrevClick} icon=\"arrow-left\" intent=\"primary\">Previous Page</Button>\n        )}\n        {(props.list.length > settings.numItemsPerPage && startIndex < props.list.length - 1) && \n          (<Button onClick={handleNextClick} icon=\"arrow-right\" intent=\"primary\">Next Page</Button>\n        )}\n      <p className=\"margin-1\"><i>{settings.showCompleted ? '' : 'not '}showing completed tasks</i></p>\n    </div>\n  )\n}\nexport default List;\n","import React from 'react'\nimport { Button, FormGroup, InputGroup, Card, Elevation } from \"@blueprintjs/core\";\n\nconst Form = (props) => {\n  return (  \n  \n      <form onSubmit={props.handleSubmit}>\n        <div class=\"bp3-callout bp3-intent-success form-caption\">\n          <h4 class=\"bp3-heading\">Add To Do Item</h4>\n          Get organized, get things done.\n        </div>\n\n        <Card interactive={false} elevation={Elevation.TWO}>\n        <FormGroup minimal={true}>\n              <span>To Do Item</span>\n              <InputGroup className=\"input-item\" onChange={props.handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n\n              <span>Assigned To</span>\n              <InputGroup className=\"input-item\" onChange={props.handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n              \n              <span className=\"slider-label\">Difficulty</span>\n              <br/>\n              <input className=\"slider\" onChange={props.handleChange} type=\"range\" defaultValue=\"3\" min={1} max={5} name=\"difficulty\" />\n            \n              <br/><Button className=\"submit-btn\" type=\"submit\" intent=\"success\">Add Item</Button>\n          </FormGroup>\n         </Card>\n      </form>\n   \n  )\n}\n\nexport default Form;\n","import React from 'react'\n\nexport const Header = (props) => {\n  return (\n    <nav className=\"bp3-navbar bp3-light\">\n    <div className=\"nav-style\">\n      <div className=\"bp3-navbar-group bp3-align-left\">\n        <div className=\"nav-heading bp3-icon-list-detail-view\"> To Do List</div>\n      </div>\n      <div className=\"bp3-navbar-group bp3-align-right\">\n      <span className=\"bp3-navbar-divider\"></span>\n        <span className=\"bp3-icon-tick\"> {props.incomplete} items pending</span>\n      </div>\n    </div>\n  </nav>\n  )\n}\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport useForm from '../hooks/form.js';\nimport List from './list.js';\nimport Form from './form.js';\nimport Header from './header.js';\n\n\nimport { v4 as uuid } from 'uuid';\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n\n    if(!list.includes(item)) {\n      setList([...list, item]);\n    } else {\n      alert('Entry already exists')\n    }\n  }\n\n  function deleteItem(id) {\n    const items = list.filter( item => item.id !== id );\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map( item => {\n      if ( item.id == id ) {\n        item.complete = ! item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n    <>\n      <Header incomplete={incomplete} />\n      <div className=\"flex-container\">\n        <Form \n          handleSubmit={handleSubmit} \n          handleChange={handleChange} \n        />\n      \n        <List list={list} deleteItem={deleteItem} toggleComplete={toggleComplete} />\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\n\nimport ToDo from './components/todo.js';\nimport './app.scss';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <ToDo />\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nimport Theme from './context/theme';\n\nimport \"normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\n\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <Theme>\n        <App />\n      </Theme>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}